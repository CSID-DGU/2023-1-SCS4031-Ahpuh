{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC815\\uC7AC\\uD601\\\\OneDrive - dgu.edu\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\4\\uD559\\uB1441\\uD559\\uAE30\\\\\\uC735\\uD569\\uCEA1\\uC2A4\\uD1A4\\uB514\\uC790\\uC778\\\\2023-1-SCS4031-Ahpuh\\\\frontend\\\\blog\\\\src\\\\routes\\\\Setting.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Setting() {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const handleImageChange = (e, imageType) => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onload = event => {\n      setSelectedImage({\n        type: imageType,\n        data: event.target.result\n      });\n    };\n    if (file) {\n      reader.readAsDataURL(file);\n      handleImageUpload(file, imageType);\n    }\n  };\n  const handleImageUpload = (file, imageType) => {\n    // 서버로 파일 업로드 요청을 보내는 로직을 작성합니다.\n    // 예시로는 fetch를 사용하여 POST 요청을 보내고, 응답을 처리합니다.\n    const formData = new FormData();\n    formData.append('image', file);\n    fetch(`/api/upload?type=${imageType}`, {\n      method: 'POST',\n      body: formData\n    }).then(response => response.json()).then(data => {\n      // 업로드 후의 처리 로직을 작성합니다.\n      console.log('업로드 완료:', data);\n      // 추가적인 작업을 수행하거나, 서버로부터 받은 데이터를 활용할 수 있습니다.\n    }).catch(error => {\n      console.error('업로드 실패:', error);\n      // 실패 시에 대한 오류 처리 로직을 작성합니다.\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB354\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: e => handleImageChange(e, 'image1')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: e => handleImageChange(e, 'image2')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: e => handleImageChange(e, 'image3')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: selectedImage.data,\n      alt: \"\\uC5C5\\uB85C\\uB4DC\\uB41C \\uC774\\uBBF8\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n}\n_s(Setting, \"gNHFCSJ3h3sH8HFrpxN7hUqoxHs=\");\n_c = Setting;\n;\nexport default Setting;\nvar _c;\n$RefreshReg$(_c, \"Setting\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Setting","_s","selectedImage","setSelectedImage","handleImageChange","e","imageType","file","target","files","reader","FileReader","onload","event","type","data","result","readAsDataURL","handleImageUpload","formData","FormData","append","fetch","method","body","then","response","json","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/정재혁/OneDrive - dgu.edu/바탕 화면/4학년1학기/융합캡스톤디자인/2023-1-SCS4031-Ahpuh/frontend/blog/src/routes/Setting.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Setting(){\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n    const handleImageChange = (e, imageType) => {\r\n      const file = e.target.files[0];\r\n      const reader = new FileReader();\r\n  \r\n      reader.onload = (event) => {\r\n        setSelectedImage({ type: imageType, data: event.target.result });\r\n      };\r\n  \r\n      if (file) {\r\n        reader.readAsDataURL(file);\r\n        handleImageUpload(file, imageType);\r\n      }\r\n    };\r\n  \r\n    const handleImageUpload = (file, imageType) => {\r\n      // 서버로 파일 업로드 요청을 보내는 로직을 작성합니다.\r\n      // 예시로는 fetch를 사용하여 POST 요청을 보내고, 응답을 처리합니다.\r\n      const formData = new FormData();\r\n      formData.append('image', file);\r\n  \r\n      fetch(`/api/upload?type=${imageType}`, {\r\n        method: 'POST',\r\n        body: formData\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          // 업로드 후의 처리 로직을 작성합니다.\r\n          console.log('업로드 완료:', data);\r\n          // 추가적인 작업을 수행하거나, 서버로부터 받은 데이터를 활용할 수 있습니다.\r\n        })\r\n        .catch(error => {\r\n          console.error('업로드 실패:', error);\r\n          // 실패 시에 대한 오류 처리 로직을 작성합니다.\r\n        });\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <h1>이미지 업로더</h1>\r\n        <input type=\"file\" accept=\"image/*\" onChange={(e) => handleImageChange(e, 'image1')} />\r\n        <input type=\"file\" accept=\"image/*\" onChange={(e) => handleImageChange(e, 'image2')} />\r\n        <input type=\"file\" accept=\"image/*\" onChange={(e) => handleImageChange(e, 'image3')} />\r\n        {selectedImage && <img src={selectedImage.data} alt=\"업로드된 이미지\" />}\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default Setting;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}