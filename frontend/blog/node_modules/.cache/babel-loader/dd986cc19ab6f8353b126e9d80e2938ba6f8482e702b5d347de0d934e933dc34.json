{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC815\\uC7AC\\uD601\\\\OneDrive - dgu.edu\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\4\\uD559\\uB1441\\uD559\\uAE30\\\\\\uC735\\uD569\\uCEA1\\uC2A4\\uD1A4\\uB514\\uC790\\uC778\\\\2023-1-SCS4031-Ahpuh\\\\frontend\\\\blog\\\\src\\\\routes\\\\About.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport ReactPlayer from 'react-player/lazy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction About(_ref) {\n  _s();\n  let {\n    playList,\n    index\n  } = _ref;\n  const [file, setFile] = useState({});\n  const videoUpload = e => {\n    const videoType = e.target.file.type.includes('video');\n    setFile({\n      url: URL.createObjectURL(e.target.files),\n      video: videoType\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Player Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-wrapper\",\n      style: {\n        float: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n        className: \"react-player\",\n        url: 'https://youtu.be/CwVmxWkY6Zw' // 플레이어 url\n        ,\n        width: \"800px\" // 플레이어 크기 (가로)\n        ,\n        height: \"500px\" // 플레이어 크기 (세로)\n        ,\n        playing: true // 자동 재생 on\n        ,\n        muted: true // 자동 재생 on\n        ,\n        controls: true // 플레이어 컨트롤 노출 여부\n        ,\n        light: false // 플레이어 모드\n        ,\n        pip: true // pip 모드 설정 여부\n        ,\n        poster: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/images/BigBuckBunny.jpg' // 플레이어 초기 포스터 사진\n        // onEnded={() => handleVideo()}  // 플레이어 끝났을 때 이벤트\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true)\n  // <div>\n  //     <input type=\"file\" onChange={videoUpload}/>\n  //     {file.video &&  <video src= {file.url} width=\"750\" height={500} controls />}\n  // </div>\n  ;\n}\n_s(About, \"+MTAQB3VZzx94vYYsTHai8QYRlg=\");\n_c = About;\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","useState","ReactPlayer","jsxDEV","_jsxDEV","Fragment","_Fragment","About","_ref","_s","playList","index","file","setFile","videoUpload","e","videoType","target","type","includes","url","URL","createObjectURL","files","video","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","float","width","height","playing","muted","controls","light","pip","poster","_c","$RefreshReg$"],"sources":["C:/Users/정재혁/OneDrive - dgu.edu/바탕 화면/4학년1학기/융합캡스톤디자인/2023-1-SCS4031-Ahpuh/frontend/blog/src/routes/About.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport ReactPlayer from 'react-player/lazy';\r\n\r\nfunction About({playList, index}){\r\n    const [file, setFile] = useState({});\r\n    const videoUpload = e =>{\r\n        const videoType = e.target.file.type.includes('video');\r\n\r\n        setFile({\r\n            url : URL.createObjectURL(e.target.files),\r\n            video:videoType,\r\n        });\r\n    }\r\n    return(\r\n        <>\r\n            <h2>Player Test</h2>\r\n            <div className='player-wrapper' style={{float:'center'}}>\r\n                <ReactPlayer\r\n                    className='react-player'\r\n                    url={'https://youtu.be/CwVmxWkY6Zw'}    // 플레이어 url\r\n                    width='800px'         // 플레이어 크기 (가로)\r\n                    height='500px'        // 플레이어 크기 (세로)\r\n                    playing={true}        // 자동 재생 on\r\n                    muted={true}          // 자동 재생 on\r\n                    controls={true}       // 플레이어 컨트롤 노출 여부\r\n                    light={false}         // 플레이어 모드\r\n                    pip={true}            // pip 모드 설정 여부\r\n                    poster={'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/images/BigBuckBunny.jpg'}   // 플레이어 초기 포스터 사진\r\n                    // onEnded={() => handleVideo()}  // 플레이어 끝났을 때 이벤트\r\n                />\r\n            </div>\r\n        </>\r\n        // <div>\r\n        //     <input type=\"file\" onChange={videoUpload}/>\r\n        //     {file.video &&  <video src= {file.url} width=\"750\" height={500} controls />}\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default About;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,WAAW,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,SAASC,KAAKA,CAAAC,IAAA,EAAmB;EAAAC,EAAA;EAAA,IAAlB;IAACC,QAAQ;IAAEC;EAAK,CAAC,GAAAH,IAAA;EAC5B,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAMa,WAAW,GAAGC,CAAC,IAAG;IACpB,MAAMC,SAAS,GAAGD,CAAC,CAACE,MAAM,CAACL,IAAI,CAACM,IAAI,CAACC,QAAQ,CAAC,OAAO,CAAC;IAEtDN,OAAO,CAAC;MACJO,GAAG,EAAGC,GAAG,CAACC,eAAe,CAACP,CAAC,CAACE,MAAM,CAACM,KAAK,CAAC;MACzCC,KAAK,EAACR;IACV,CAAC,CAAC;EACN,CAAC;EACD,oBACIZ,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACIrB,OAAA;MAAAqB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBzB,OAAA;MAAK0B,SAAS,EAAC,gBAAgB;MAACC,KAAK,EAAE;QAACC,KAAK,EAAC;MAAQ,CAAE;MAAAP,QAAA,eACpDrB,OAAA,CAACF,WAAW;QACR4B,SAAS,EAAC,cAAc;QACxBV,GAAG,EAAE,8BAA+B,CAAI;QAAA;QACxCa,KAAK,EAAC,OAAO,CAAS;QAAA;QACtBC,MAAM,EAAC,OAAO,CAAQ;QAAA;QACtBC,OAAO,EAAE,IAAK,CAAQ;QAAA;QACtBC,KAAK,EAAE,IAAK,CAAU;QAAA;QACtBC,QAAQ,EAAE,IAAK,CAAO;QAAA;QACtBC,KAAK,EAAE,KAAM,CAAS;QAAA;QACtBC,GAAG,EAAE,IAAK,CAAY;QAAA;QACtBC,MAAM,EAAE,2FAA4F,CAAG;QACvG;MAAA;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA,eACR;EACF;EACA;EACA;EACA;EAAA;AAER;AAACpB,EAAA,CAlCQF,KAAK;AAAAkC,EAAA,GAALlC,KAAK;AAoCd,eAAeA,KAAK;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}